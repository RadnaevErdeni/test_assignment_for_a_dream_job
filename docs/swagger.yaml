definitions:
  handler.responsestat:
    properties:
      message:
        type: string
    type: object
  testtask.DBUsers:
    properties:
      address:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: integer
      passport_serie:
        type: integer
      patronymic:
        type: string
      surname:
        type: string
    required:
    - address
    - name
    - passport_number
    - passport_serie
    type: object
  testtask.Passport:
    properties:
      passport_number:
        type: string
    type: object
  testtask.Tasks:
    properties:
      date_create:
        type: string
      description:
        type: string
      duration:
        type: string
      end_time:
        type: string
      id:
        type: integer
      last_pause_time:
        type: string
      last_resume_time:
        type: string
      start_time:
        type: string
      status:
        type: string
      title:
        type: string
      total_pause_duration:
        type: string
    required:
    - title
    type: object
  testtask.UpdateUserInput:
    properties:
      address:
        type: string
      name:
        type: string
      passport_number:
        type: string
      passport_serie:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
info:
  contact: {}
paths:
  /user:
    get:
      consumes:
      - application/json
      description: Get all users
      operationId: get-all-users
      parameters:
      - description: User ID
        in: query
        name: id
        type: integer
      - description: Surname
        in: query
        name: surname
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Patronymic
        in: query
        name: patronymic
        type: string
      - description: Passport Serie
        in: query
        name: passportSerie
        type: integer
      - description: Passport Number
        in: query
        name: passportNumber
        type: integer
      - description: Address
        in: query
        name: address
        type: string
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items: {}
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Users
  /user/{userId}:
    delete:
      description: Delete user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete User
    get:
      description: Get user by ID
      operationId: get-user-by-id
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/testtask.DBUsers'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get User by ID
    put:
      consumes:
      - application/json
      description: Update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/testtask.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update User
  /user/{userId}/labor-costs:
    get:
      description: Get labor costs for a user
      operationId: get-labor-costs
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Start date
        in: query
        name: start
        required: true
        type: string
      - description: End date
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Labor Costs
  /user/{userId}/tasks:
    get:
      description: Get all tasks for a user
      operationId: get-all-tasks
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            items:
              $ref: '#/definitions/testtask.Tasks'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Tasks
    post:
      consumes:
      - application/json
      description: Create a new task for a user
      operationId: create-task
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Task info
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/testtask.Tasks'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create Task
  /user/{userId}/tasks/{taskId}:
    delete:
      description: Delete task by ID
      operationId: delete-task
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete Task
    get:
      description: Get task by ID
      operationId: get-task-by-id
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/testtask.Tasks'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Task by ID
  /user/{userId}/tasks/{taskId}/end:
    put:
      description: End task by ID
      operationId: end-task
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: End Task
  /user/{userId}/tasks/{taskId}/pause:
    put:
      description: Pause a task by ID for a specific user
      operationId: pause-task
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/handler.responsestat'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Pause Task
  /user/{userId}/tasks/{taskId}/resume:
    put:
      description: Resume a paused task by ID for a specific user
      operationId: resume-task
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/handler.responsestat'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Resume Task
  /user/{userId}/tasks/{taskId}/start:
    put:
      description: Start task by ID
      operationId: start-task
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Start Task
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with passport validation
      operationId: create-user
      parameters:
      - description: Passport info
        in: body
        name: passport
        required: true
        schema:
          $ref: '#/definitions/testtask.Passport'
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create User
swagger: "2.0"
